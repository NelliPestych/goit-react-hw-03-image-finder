{"version":3,"sources":["components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Button/Button.module.css","services/apiService.js","helpers/mapper.js","components/ImageGalleryItem/ImageGalleryItem.js","components/Modal/Modal.js","components/ImageGallery/ImageGallery.js","components/Searchbar/Searchbar.js","components/Loader/Loader.js","components/Button/Button.js","components/App/App.js","index.js","components/Searchbar/Searchbar.module.css","components/App/App.module.css","components/ImageGallery/ImageGallery.module.css"],"names":["module","exports","page","query","fethImages","queryParam","this","currentPage","fetch","baseUrl","then","response","json","data","incrementPage","hits","string","resetPage","map","hit","id","smallImg","webformatURL","bigImg","largeImageURL","ImageGalleryItem","src","alt","className","img","Modal","handleKeyPress","event","code","props","onClick","window","addEventListener","removeEventListener","overlay","modal","Component","ImageGallery","state","isModalOpen","modalImg","openModalHandler","currentTarget","dataset","setState","closeModalHandler","target","images","list","key","item","data-img","SearchBar","handleChange","value","handleSubmit","preventDefault","onSubmit","bar","form","type","button","label","input","autoComplete","placeholder","onChange","Loader","color","height","width","timeout","defaultProps","Button","App","isLoading","fetchImages","imagesApi","currentQuery","res","length","error","mapper","catch","err","finally","getNewImgHandler","prevProps","prevState","scrollTo","top","document","documentElement","scrollHeight","behavior","styles","container","loadingWrap","ReactDOM","render","querySelector"],"mappings":"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","file":"static/js/main.9f08e318.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Modal_overlay__2O-_0\",\"modal\":\"Modal_modal__1vWyX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"img\":\"ImageGalleryItem_img__3DkLK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Button_button__3537c\"};","const baseUrl = 'https://pixabay.com/api/';\r\nconst apiKey = '?key=14998986-82322fa46abf8765da09830ba';\r\nconst countImage = '&per_page=12';\r\nexport default {\r\n    page: 1,\r\n    query: 'Cat',\r\n\r\n    fethImages() {\r\n        const queryParam = `&q=${this.query}`;\r\n        const currentPage = `&page=${this.page}`;\r\n\r\n        return fetch(baseUrl + apiKey + queryParam + countImage + currentPage)\r\n            .then(response => response.json())\r\n            .then(data => {\r\n                this.incrementPage();\r\n                return data.hits;\r\n            });\r\n    },\r\n\r\n    incrementPage() {\r\n        this.page += 1;\r\n    },\r\n\r\n    get currentQuery() {\r\n        return this.query;\r\n    },\r\n\r\n    set currentQuery(string) {\r\n        this.query = string;\r\n    },\r\n\r\n    get currentPage() {\r\n        return this.page;\r\n    },\r\n\r\n    resetPage() {\r\n        this.page = 1;\r\n    },\r\n};\r\n","export default hits =>\r\n    hits.map(hit => ({\r\n        id: hit.id,\r\n        smallImg: hit.webformatURL,\r\n        bigImg: hit.largeImageURL,\r\n    }));\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { img } from './ImageGalleryItem.module.css';\r\n\r\nconst ImageGalleryItem = ({ src, alt }) => (\r\n    <img src={src} alt={alt} className={img} />\r\n);\r\n\r\nImageGalleryItem.propTypes = {\r\n    src: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { overlay, modal } from './Modal.module.css';\r\n\r\nexport default class Modal extends Component {\r\n    static propTypes = {\r\n        src: PropTypes.string.isRequired,\r\n        alt: PropTypes.string.isRequired,\r\n        onClick: PropTypes.func.isRequired,\r\n    };\r\n\r\n    componentDidMount() {\r\n        window.addEventListener('keydown', this.handleKeyPress);\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        window.removeEventListener('keydown', this.handleKeyPress);\r\n    }\r\n\r\n    handleKeyPress = event => {\r\n        if (event.code !== 'Escape') return;\r\n\r\n        this.props.onClick();\r\n    };\r\n\r\n    render() {\r\n        const { src, alt, onClick } = this.props;\r\n        return (\r\n            <div className={overlay} onClick={onClick}>\r\n                <div className={modal}>\r\n                    <img src={src} alt={alt} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { list, item } from './ImageGallery.module.css';\r\nimport ImageGalleryItem from '../ImageGalleryItem/ImageGalleryItem';\r\nimport Modal from '../Modal/Modal';\r\n\r\nexport default class ImageGallery extends Component {\r\n    static propTypes = {\r\n        images: PropTypes.arrayOf(\r\n            PropTypes.shape({\r\n                id: PropTypes.number.isRequired,\r\n                smallImg: PropTypes.string.isRequired,\r\n            }),\r\n        ).isRequired,\r\n        alt: PropTypes.string.isRequired,\r\n    };\r\n\r\n    state = {\r\n        isModalOpen: false,\r\n        modalImg: '',\r\n    };\r\n\r\n    openModalHandler = event => {\r\n        const { img } = event.currentTarget.dataset;\r\n        this.setState({ modalImg: img, isModalOpen: true });\r\n    };\r\n\r\n    closeModalHandler = event => {\r\n        if (!event || event.currentTarget === event.target)\r\n            this.setState({ isModalOpen: false });\r\n    };\r\n\r\n    render() {\r\n        const { isModalOpen, modalImg } = this.state;\r\n        const { images, alt } = this.props;\r\n        return (\r\n            <>\r\n                <ul className={list}>\r\n                    {images.map(({ id, smallImg, bigImg }) => (\r\n                        <li\r\n                            key={id}\r\n                            className={item}\r\n                            onClick={this.openModalHandler}\r\n                            data-img={bigImg}\r\n                        >\r\n                            <ImageGalleryItem src={smallImg} alt={alt} />\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                {isModalOpen && (\r\n                    <Modal\r\n                        src={modalImg}\r\n                        alt={alt}\r\n                        onClick={this.closeModalHandler}\r\n                    />\r\n                )}\r\n            </>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { bar, form, button, label, input } from './Searchbar.module.css';\r\n\r\nexport default class SearchBar extends Component {\r\n    static propTypes = {\r\n        onSubmit: PropTypes.func.isRequired,\r\n    };\r\n\r\n    state = { query: '' };\r\n\r\n    handleChange = event => {\r\n        this.setState({ query: event.target.value });\r\n    };\r\n\r\n    handleSubmit = event => {\r\n        event.preventDefault();\r\n\r\n        this.props.onSubmit(this.state.query);\r\n\r\n        this.setState({\r\n            query: '',\r\n        });\r\n    };\r\n\r\n    render() {\r\n        const { query } = this.state;\r\n        return (\r\n            <header className={bar}>\r\n                <form className={form} onSubmit={this.handleSubmit}>\r\n                    <button type=\"submit\" className={button}>\r\n                        <span className={label}>Search</span>\r\n                    </button>\r\n\r\n                    <input\r\n                        className={input}\r\n                        type=\"text\"\r\n                        autoComplete=\"off\"\r\n                        placeholder=\"Search images and photos\"\r\n                        value={query}\r\n                        onChange={this.handleChange}\r\n                    />\r\n                </form>\r\n            </header>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\r\nimport LoaderSpinner from 'react-loader-spinner';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Loader = ({ type }) => (\r\n    <LoaderSpinner\r\n        type={type}\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={0}\r\n    />\r\n);\r\n\r\nLoader.defaultProps = {\r\n    type: 'ThreeDots',\r\n};\r\n\r\nLoader.propTypes = {\r\n    type: PropTypes.string,\r\n};\r\n\r\nexport default Loader;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { button } from './Button.module.css';\r\n\r\nconst Button = ({ onClick }) => (\r\n    <button className={button} onClick={onClick} type=\"button\">\r\n        Load More\r\n    </button>\r\n);\r\n\r\nButton.propTypes = {\r\n    onClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Button;\r\n","import React, { Component } from 'react';\r\nimport { error } from '@pnotify/core';\r\nimport imagesApi from '../../services/apiService';\r\nimport mapper from '../../helpers/mapper';\r\nimport styles from './App.module.css';\r\nimport ImageGallery from '../ImageGallery/ImageGallery';\r\nimport Searchbar from '../Searchbar/Searchbar';\r\nimport Loader from '../Loader/Loader';\r\nimport Button from '../Button/Button';\r\n\r\nexport default class App extends Component {\r\n    state = {\r\n        images: [],\r\n        isLoading: false,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.fetchImages();\r\n    }\r\n\r\n    componentDidUpdate(prevProps, prevState) {\r\n        if (prevState.images.length > 12) {\r\n            window.scrollTo({\r\n                top: document.documentElement.scrollHeight,\r\n                behavior: 'smooth',\r\n            });\r\n        }\r\n    }\r\n\r\n    fetchImages = query => {\r\n        if (query && typeof query === 'string') {\r\n            this.setState({ images: [] });\r\n            imagesApi.currentQuery = query;\r\n            imagesApi.resetPage();\r\n        }\r\n        imagesApi\r\n            .fethImages()\r\n            .then(res => {\r\n                if (res.length === 0) {\r\n                    error('No result with your query!');\r\n                }\r\n                this.setState(state => ({\r\n                    images: [...state.images, ...mapper(res)],\r\n                }));\r\n            })\r\n            .catch(err => error(err))\r\n            .finally(() => {\r\n                this.setState({ isLoading: false });\r\n            });\r\n    };\r\n\r\n    getNewImgHandler = () => {\r\n        this.setState({ isLoading: true });\r\n        this.fetchImages();\r\n    };\r\n\r\n    render() {\r\n        const { images, isLoading } = this.state;\r\n        const alt = imagesApi.currentQuery;\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                <Searchbar onSubmit={this.fetchImages} />\r\n                <>\r\n                    {images.length > 0 ? (\r\n                        <>\r\n                            <ImageGallery images={images} alt={alt} />\r\n                            <div className={styles.loadingWrap}>\r\n                                {isLoading ? <Loader type=\"ThreeDots\" /> : <Button onClick={this.getNewImgHandler} />}\r\n                            </div>\r\n                        </>\r\n                    ) : (\r\n                        <Loader type=\"Oval\" />\r\n                    )}\r\n                </>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport '@pnotify/core/dist/PNotify.css';\nimport '@pnotify/core/dist/BrightTheme.css';\n\nimport App from './components/App/App';\nimport './style.css';\n\nReactDOM.render(<App />, document.querySelector('#root'));\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bar\":\"Searchbar_bar__3KKgx\",\"form\":\"Searchbar_form__3jOZ0\",\"button\":\"Searchbar_button__2R2cL\",\"label\":\"Searchbar_label__2jKEW\",\"input\":\"Searchbar_input__17jYe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1iDcS\",\"loadingWrap\":\"App_loadingWrap__1FeDx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ImageGallery_list__3uvtA\",\"item\":\"ImageGallery_item__3hB6Z\"};"],"sourceRoot":""}